= WikiLoop Galaxy =

An interactive network visualization tool that maps Wikipedia articles and their interconnections using the Wikipedia API. Built with D3.js for dynamic graph rendering and real-time exploration.

'''üåê Web App''': https://galaxy.wikiloop.org<br>
'''üìÅ Source Code''': https://github.com/wikiloop/galaxy<br>
'''üìñ Wikipedia Page''': [[WP:WikiLoop Galaxy]]

== Demo ==

<div style="position: relative; padding-bottom: 86.26198083067092%; height: 0;"><iframe src="https://www.loom.com/embed/5ccb54c0ce934939aee0458d23fa0cb2?sid=77210291-f6a8-4351-ac9d-a347152a00db" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen style="position: absolute; top: 0; left: 0; width: 100%; height: 100%;"></iframe></div>

== Features ==

=== Core Functionality ===
* '''Bidirectional Link Traversal''': Explores both outbound links (FROM articles) and inbound links (TO articles)
* '''Real-time Graph Building''': Starts with a root article and progressively builds the network
* '''Interactive Expansion''': Click any node to expand it with 10 more connected articles
* '''Link Validation''': Checks page existence to handle broken Wikipedia links

=== Visual Design ===
* '''Obsidian-style Dark Theme''': Clean, modern interface optimized for graph exploration
* '''Color-coded Nodes''':
** üü¢ '''Green''': Root article (starting point)
** üîµ '''Blue/Teal''': Valid Wikipedia articles (1st/2nd degree)
** üî¥ '''Red''': Missing/non-existent pages (red links)
** üü° '''Yellow Border''': Expandable nodes with pulsing animation
* '''Force-directed Layout''': Natural node positioning with physics simulation
* '''Zoom & Pan''': Navigate large graphs with mouse controls

=== Interaction ===
* '''Click''': Expand node to reveal 10 more inbound + 10 outbound links
* '''Ctrl/Cmd + Click''': Open Wikipedia article in new tab
* '''Drag''': Move nodes around the canvas
* '''Scroll''': Zoom in/out of the graph

== Technical Architecture ==

=== API Integration ===
* Uses Wikipedia REST API for article links and backlinks
* Implements proper error handling and rate limiting
* Filters out non-article links (categories, templates, files)
* Validates page existence before adding to graph

=== Graph Management ===
* '''Node Deduplication''': Prevents duplicate articles in the network
* '''Link Direction''': Maintains proper directional relationships
* '''Expansion Tracking''': Prevents re-expansion of already processed nodes
* '''Memory Efficient''': Limits link counts to prevent browser overload

=== Performance ===
* '''Lazy Loading''': Only fetches data when needed
* '''Batch Processing''': Processes multiple links efficiently
* '''Visual Feedback''': Shows loading states and progress indicators
* '''Responsive Design''': Adapts to different screen sizes

== Usage ==

# '''Start''': Open <code>index.html</code> in a web browser
# '''Explore''': The graph begins with "Artificial Intelligence" as the root
# '''Expand''': Click any node to reveal more connected articles
# '''Navigate''': Use mouse to zoom, pan, and drag nodes
# '''Visit''': Ctrl/Cmd+Click to open Wikipedia pages

== Configuration ==

=== Default Settings ===
* '''Root Article''': "Artificial_intelligence"
* '''Link Limit''': 10 outbound + 10 inbound per expansion
* '''Traversal Depth''': 2 degrees from root (configurable)
* '''Node Limit''': Unlimited (browser memory dependent)

=== Customization ===
To change the root article, modify line 188 in <code>index.html</code>:
<syntaxhighlight lang="javascript">
this.startArticle = "Your_Article_Title";
</syntaxhighlight>

== Console Logging ==

The application provides detailed console output:
* üöÄ Initialization status
* üìñ Articles being processed
* üîç Links discovered and extracted
* ‚ûï Nodes being added to graph
* üîó Links being created
* ‚ö†Ô∏è Missing pages and errors
* üñ±Ô∏è User interactions

== Browser Compatibility ==

* '''Modern Browsers''': Chrome, Firefox, Safari, Edge
* '''Requirements''': ES6+ support, SVG rendering
* '''Dependencies''': D3.js v7 (loaded via CDN)

== File Structure ==

<pre>
‚îú‚îÄ‚îÄ index.html          # Complete single-file application
‚îú‚îÄ‚îÄ README.md           # This documentation
‚îî‚îÄ‚îÄ wiki-graph.html     # (Previous version)
</pre>

== Technical Details ==

=== API Endpoints Used ===
* '''Outbound Links''': <code>https://en.wikipedia.org/w/api.php?action=query&prop=links</code>
* '''Inbound Links''': <code>https://en.wikipedia.org/w/api.php?action=query&list=backlinks</code>
* '''Page Validation''': <code>https://en.wikipedia.org/w/api.php?action=query&titles=</code>

=== Data Flow ===
# Initialize with root article
# Fetch outbound + inbound links
# Validate page existence
# Add valid pages as nodes
# Create directional links
# Update visual representation
# Enable click-to-expand for all nodes

== Roadmap ==

=== 1. Wikipedia User Script ===
Create a Wikipedia user script that hardcore Wikipedians can install directly on Wikipedia pages to instantly visualize article networks without leaving the site.

'''Features:'''
* One-click graph generation from any Wikipedia article
* Seamless integration with Wikipedia's interface
* Customizable settings for power users
* Export capabilities for research and analysis

=== 2. Browser Extensions ===
Develop browser extensions for easy installation by non-technical users across all major browsers:

* '''Chrome Extension''': Available on Chrome Web Store
* '''Firefox Extension''': Available on Mozilla Add-ons
* '''Edge Extension''': Available on Microsoft Edge Add-ons
* '''Safari Extension''': Available on Mac App Store
* '''DuckDuckGo Extension''': Privacy-focused browsing integration

'''Benefits:'''
* No technical setup required
* Automatic updates
* One-click installation
* Cross-browser compatibility

=== 3. Performance Optimization with Caching ===
Implement intelligent caching system to dramatically improve performance and reduce Wikipedia API load.

'''Caching Strategy:'''
* Local storage for frequently accessed articles
* Session-based cache for current browsing session
* Intelligent cache invalidation and updates
* Offline capability for previously loaded graphs

'''Performance Improvements:'''
* Faster graph loading times
* Reduced API calls to Wikipedia
* Better user experience with instant results
* Bandwidth optimization for mobile users

== Future Enhancements ==

* '''Search Functionality''': Custom root article selection ‚úÖ (Completed)
* '''Export Options''': Save graph as image or data
* '''Filtering''': Hide/show specific link types
* '''Clustering''': Group related articles
* '''Performance''': Virtual rendering for large graphs
* '''Mobile''': Touch-optimized interactions

== License ==

MIT License - Feel free to use and modify for your projects.

[[Category:Wikipedia tools]]
[[Category:Graph visualization]]
[[Category:JavaScript applications]]
[[Category:Open source software]]